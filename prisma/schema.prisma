generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PAID
}

enum MediaType {
  IMAGE
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  image         String?
  plan          Plan      @default(FREE)
  usageCount    Int       @default(0)
  usageLimit    Int       @default(3)
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  media    Media[]

  @@map("users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Media {
  id          String    @id @default(cuid())
  url         String
  type        MediaType @default(IMAGE)
  height      Int
  width       Int
  size        Int
  providerKey String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId          String
  uploadedBy      User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  transformations TransformedMedia[]

  @@map("media")
}

model TransformedMedia {
  id  String @id @default(cuid())
  url String

  parentMediaId String
  parentMedia   Media  @relation(fields: [parentMediaId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("transformed_media")
}